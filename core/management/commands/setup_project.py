from django.core.management.base import BaseCommand
from django.core.management import call_command
from django.conf import settings
import os
from pathlib import Path


class Command(BaseCommand):
    help = '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å –Ω—É–ª—è'

    def add_arguments(self, parser):
        parser.add_argument(
            '--skip-migrations',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π',
        )
        parser.add_argument(
            '--skip-data',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö',
        )
        parser.add_argument(
            '--skip-superuser',
            action='store_true',
            help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        )

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–æ–µ–∫—Ç–∞...'))
        
        # 1. –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
        self.create_required_folders()
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ migrations
        self.create_migrations_folders()
        
        # 3. –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
        if not options['skip_migrations']:
            self.apply_migrations()
        
        # 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        if not options['skip_data']:
            self.load_initial_data()
        
        # 5. –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not options['skip_superuser']:
            self.create_superuser()
        
        self.stdout.write(self.style.SUCCESS('‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!'))
        self.stdout.write(self.style.SUCCESS('üåê –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: python manage.py runserver'))

    def create_required_folders(self):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞"""
        self.stdout.write('üìÅ –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏...')
        
        required_folders = [
            'logs',
            'media',
            'static',
        ]
        
        for folder in required_folders:
            folder_path = Path(settings.BASE_DIR) / folder
            folder_path.mkdir(exist_ok=True)
            self.stdout.write(f'  ‚úì –ü–∞–ø–∫–∞ {folder} —Å–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞')

    def create_migrations_folders(self):
        """–°–æ–∑–¥–∞–µ—Ç –ø–∞–ø–∫–∏ migrations –∏ __init__.py —Ñ–∞–π–ª—ã"""
        self.stdout.write('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫–∏ migrations...')
        
        apps = [
            'core', 'facilities', 'staff', 'users', 'blog', 'requests',
            'medical_services', 'reviews', 'recovery_stories', 'admin_logs', 'content'
        ]
        
        for app in apps:
            migrations_dir = Path(settings.BASE_DIR) / app / 'migrations'
            init_file = migrations_dir / '__init__.py'
            
            # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É migrations –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
            migrations_dir.mkdir(exist_ok=True)
            
            # –°–æ–∑–¥–∞–µ–º __init__.py –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if not init_file.exists():
                init_file.touch()
                self.stdout.write(f'  ‚úì –°–æ–∑–¥–∞–Ω {init_file}')
            else:
                self.stdout.write(f'  ‚úì {init_file} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')

    def apply_migrations(self):
        """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏"""
        self.stdout.write('üîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏...')
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏
        self.create_missing_migrations()
        
        try:
            call_command('migrate', verbosity=0)
            self.stdout.write(self.style.SUCCESS('  ‚úì –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ'))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'  ‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {e}'))
            raise

    def create_missing_migrations(self):
        """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
        self.stdout.write('üìù –°–æ–∑–¥–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏...')
        
        apps = [
            'core', 'facilities', 'staff', 'users', 'blog', 'requests',
            'medical_services', 'reviews', 'recovery_stories', 'admin_logs', 'content'
        ]
        
        for app in apps:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
                migrations_dir = Path(settings.BASE_DIR) / app / 'migrations'
                migration_files = list(migrations_dir.glob('0*.py'))
                
                if not migration_files:
                    self.stdout.write(f'  üìã –°–æ–∑–¥–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è {app}...')
                    call_command('makemigrations', app, verbosity=0)
                    self.stdout.write(f'  ‚úì –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è {app} —Å–æ–∑–¥–∞–Ω—ã')
                else:
                    self.stdout.write(f'  ‚úì –ú–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è {app} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç')
                    
            except Exception as e:
                self.stdout.write(self.style.WARNING(f'  ‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π –¥–ª—è {app}: {e}'))
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏
                continue

    def load_initial_data(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
        self.stdout.write('üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...')
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –ë–î
        backup_file = Path(settings.BASE_DIR) / 'db_backup.json'
        
        if backup_file.exists():
            try:
                call_command('loaddata', 'db_backup.json', verbosity=0)
                self.stdout.write(self.style.SUCCESS('  ‚úì –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ db_backup.json'))
            except Exception as e:
                self.stdout.write(self.style.WARNING(f'  ‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ db_backup.json: {e}'))
                self.stdout.write('  üìã –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä...')
                self.load_from_fixtures()
        else:
            self.stdout.write('  üìã –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä...')
            self.load_from_fixtures()

    def load_from_fixtures(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä"""
        try:
            call_command('load_all_initial_data', verbosity=0)
            self.stdout.write(self.style.SUCCESS('  ‚úì –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∏–∫—Å—Ç—É—Ä'))
        except Exception as e:
            self.stdout.write(self.style.WARNING(f'  ‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∏–∫—Å—Ç—É—Ä: {e}'))

    def create_superuser(self):
        """–°–æ–∑–¥–∞–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        self.stdout.write('üë§ –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
        
        try:
            from users.models import User
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if User.objects.filter(is_superuser=True).exists():
                self.stdout.write('  ‚úì –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                return
            
            # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            user = User.objects.create_user(
                username='admin',
                email='admin@admin.com',
                password='123456'
            )
            user.is_superuser = True
            user.is_staff = True
            user.role = 'superuser'
            user.save()
            
            self.stdout.write(self.style.SUCCESS('  ‚úì –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω'))
            self.stdout.write('    Email: admin@admin.com')
            self.stdout.write('    –ü–∞—Ä–æ–ª—å: 123456')
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'  ‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}'))
            self.stdout.write('  üí° –°–æ–∑–¥–∞–π—Ç–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—Ä—É—á–Ω—É—é: python manage.py createsuperuser') 