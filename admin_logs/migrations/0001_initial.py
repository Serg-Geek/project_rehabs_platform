# Generated by Django 5.1.11 on 2025-08-02 11:47

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Код')),
                ('level_type', models.CharField(choices=[('superuser', 'Суперюзер'), ('content_admin', 'Администратор контента'), ('requests_admin', 'Администратор заявок')], default='content_admin', max_length=20, verbose_name='Тип уровня')),
                ('description', models.TextField(verbose_name='Описание')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_access_levels', to=settings.AUTH_USER_MODEL, verbose_name='Создан пользователем')),
            ],
            options={
                'verbose_name': 'Уровень доступа',
                'verbose_name_plural': 'Уровни доступа',
            },
        ),
        migrations.CreateModel(
            name='AdminActionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Действие')),
                ('app_label', models.CharField(max_length=100, verbose_name='Приложение')),
                ('model_name', models.CharField(max_length=100, verbose_name='Модель')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID объекта')),
                ('changes', models.JSONField(default=dict, verbose_name='Изменения')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('access_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions', to='admin_logs.accesslevel', verbose_name='Уровень доступа')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_actions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Лог действий администратора',
                'verbose_name_plural': 'Логи действий администраторов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('valid_from', models.DateTimeField(verbose_name='Действует с')),
                ('valid_until', models.DateTimeField(blank=True, null=True, verbose_name='Действует до')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('access_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_accesses', to='admin_logs.accesslevel', verbose_name='Уровень доступа')),
                ('granted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='granted_accesses', to=settings.AUTH_USER_MODEL, verbose_name='Назначен пользователем')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_accesses', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Доступ пользователя',
                'verbose_name_plural': 'Доступы пользователей',
            },
        ),
        migrations.CreateModel(
            name='AppPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100, verbose_name='Приложение')),
                ('can_view', models.BooleanField(default=False, verbose_name='Может просматривать')),
                ('can_add', models.BooleanField(default=False, verbose_name='Может добавлять')),
                ('can_change', models.BooleanField(default=False, verbose_name='Может изменять')),
                ('can_delete', models.BooleanField(default=False, verbose_name='Может удалять')),
                ('can_assign_responsible', models.BooleanField(default=False, verbose_name='Может назначать ответственных')),
                ('can_change_status', models.BooleanField(default=False, verbose_name='Может изменять статус')),
                ('access_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_permissions', to='admin_logs.accesslevel', verbose_name='Уровень доступа')),
            ],
            options={
                'verbose_name': 'Разрешение приложения',
                'verbose_name_plural': 'Разрешения приложений',
                'unique_together': {('app_label', 'access_level')},
            },
        ),
    ]
