# Generated by Django 5.1.11 on 2025-08-02 11:47

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('staff', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('is_rehabilitation_program', models.BooleanField(default=False, help_text='Отметьте, если услуга является реабилитационной программой', verbose_name='Реабилитационная программа')),
                ('display_order', models.PositiveIntegerField(default=0, help_text='Чем меньше число, тем выше услуга в списке. 0 - в конце списка.', verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TherapyMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Метод терапии',
                'verbose_name_plural': 'Методы терапии',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FacilityService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('object_id', models.PositiveIntegerField(verbose_name='ID учреждения')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Тип учреждения')),
                ('specialists', models.ManyToManyField(blank=True, related_name='facility_services', to='staff.medicalspecialist', verbose_name='Специалисты')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='medical_services.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Услуга учреждения',
                'verbose_name_plural': 'Услуги учреждений',
                'ordering': ['service'],
                'unique_together': {('content_type', 'object_id', 'service')},
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('meta_title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Meta Title')),
                ('meta_description', models.TextField(blank=True, null=True, verbose_name='Meta Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='medical_services.servicecategory', verbose_name='Родительская категория')),
            ],
            options={
                'verbose_name': 'Категория услуг',
                'verbose_name_plural': 'Категории услуг',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='service',
            name='categories',
            field=models.ManyToManyField(related_name='services', to='medical_services.servicecategory', verbose_name='Категории'),
        ),
        migrations.CreateModel(
            name='ServicePrice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('facility_service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='medical_services.facilityservice', verbose_name='Услуга учреждения')),
            ],
            options={
                'verbose_name': 'История цен',
                'verbose_name_plural': 'История цен',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['display_order', 'is_active'], name='medical_ser_display_cd8199_idx'),
        ),
        migrations.AddIndex(
            model_name='service',
            index=models.Index(fields=['is_active', 'display_order'], name='medical_ser_is_acti_73ff3c_idx'),
        ),
    ]
